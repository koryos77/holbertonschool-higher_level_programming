# Test cases for add_integer function

# Import the function
>>> add_integer = __import__('0-add_integer').add_integer

# Test with two integers
>>> add_integer(1, 2)
3

# Test with negative numbers
>>> add_integer(100, -2)
98

# Test with one argument (default b=98)
>>> add_integer(2)
100

# Test with floats
>>> add_integer(100.3, -2)
98

# Test with two floats
>>> add_integer(3.2, 2.6)
5

# Test with invalid input (string)
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test with invalid input (string)
>>> add_integer("Best", "4")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test with None
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test without arguments
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

# Test with float overflow
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
    ...
OverflowError: float overflow

# Test with float NaN
>>> add_integer(float('nan'), 0)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
